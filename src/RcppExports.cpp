// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// igrepl
LogicalVector igrepl(CharacterVector patterns, std::string x, bool fixed);
RcppExport SEXP _NUSS_igrepl(SEXP patternsSEXP, SEXP xSEXP, SEXP fixedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type patterns(patternsSEXP);
    Rcpp::traits::input_parameter< std::string >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type fixed(fixedSEXP);
    rcpp_result_gen = Rcpp::wrap(igrepl(patterns, x, fixed));
    return rcpp_result_gen;
END_RCPP
}
// internal_unigram_sequence_segmentation
List internal_unigram_sequence_segmentation(std::vector<std::string> sequences, CharacterVector to_search, CharacterVector to_replace, NumericVector ids, NumericVector points, bool omit_zero);
RcppExport SEXP _NUSS_internal_unigram_sequence_segmentation(SEXP sequencesSEXP, SEXP to_searchSEXP, SEXP to_replaceSEXP, SEXP idsSEXP, SEXP pointsSEXP, SEXP omit_zeroSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type sequences(sequencesSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type to_search(to_searchSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type to_replace(to_replaceSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ids(idsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type points(pointsSEXP);
    Rcpp::traits::input_parameter< bool >::type omit_zero(omit_zeroSEXP);
    rcpp_result_gen = Rcpp::wrap(internal_unigram_sequence_segmentation(sequences, to_search, to_replace, ids, points, omit_zero));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_NUSS_igrepl", (DL_FUNC) &_NUSS_igrepl, 3},
    {"_NUSS_internal_unigram_sequence_segmentation", (DL_FUNC) &_NUSS_internal_unigram_sequence_segmentation, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_NUSS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
